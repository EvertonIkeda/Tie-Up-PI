Gerência de Configuração e Controle de Versão: Ferramentas de Controle de Versão Atividade 1 - PI 1 
Prof. Ricardo Petri Silva 
Esta atividade consiste na fixação dos conteúdos relacionados às ferramentas de controle de versão. Baseado no conteúdo teórico e nas nossas aulas práticas, respondam as perguntas a seguir. 
Entrega: 10/04/2022 - Classroom PI 1 

1. Descreva os motivos pelos quais tornam o Git uma ferramenta indispensável no dia a dia de um desenvolvedor. 
O Git é uma ferramenta indispensável para os desenvolvedores porque permite a cooperação do trabalho em equipe em um projeto, evitando conflitos entre as alterações que acontecem na evolução do projeto. Com isso, entende-se que a importância do Git está atrelada ao controle de versão, permitindo a restauração de versões anteriores, bem como organização das alterações.

2. Por que é recomendado utilizarmos o comando git pull origin main antes de trabalharmos em uma branch específica? 
É recomendado a utilização do comando git pull origin main antes do trabalho efetivo em uma branch para que as informações dessa branch sejam atualizadas de acordo com a main do projeto. Considera-se uma boa prática para evitar conflitos futuros.

  3. Por que é recomendado criarmos branches para realizarmos uma determinada tarefa?

É recomendado o uso de branches para realizar as tarefas porque a branch é uma cópia do repositório definitivo do projeto. Dessa forma, é possível alterar o código de um projeto mantendo a versão main sem alterações.


  4. O que é um pull request? 

	Compreende-se  como “pull request” a solicitação de atualização do repositório principal do projeto, reconhecido como “main”, através de uma ramificação, caracterizada como “branch”. Assim, é disseminada uma notificação aos participantes do projeto informando as alterações realizadas a fim da associação entre a branch e a main, a qual designa-se como “merge”.

5. O Git é um sistema de controle de versão muito utilizado na atualidade. Com ele podemos controlar versões de diversos tipos de arquivos, principalmente códigos fontes de sistemas. Um programador executou a seguinte sequência de comandos no pelo git bash: 
git add calculadora.py 
git commit –m “primeiro commit calculadora” 
Qual foi o objetivo? 
(a) Criar um commit do arquivo ““calculadora.py”” localmente, para posterior envio ao repositório remoto. 
(b) Criar um branch (ramificação) do repositório atual a partir do arquivo “calcu ladora.py”. 
(c) Remover o arquivo “calculadora.py” do repositório local. 
(d) Fazer um merge do arquivo “calculadora.py” com o repositório local. 
(e) Enviar o arquivo “calculadora.py” para o servidor remoto. 


6. No processo de desenvolvimento colaborativo de software, a gerência de versão permite controlar o histórico e o desenvolvimento dos códigos-fontes bem como da documentação. Em relação ao uso de sistemas de controle de versão de software (como Git e subversion) em engenharia de software, considere as seguintes afirmações: 
I - Checkout é o comando de excluir um código-fonte do repositório. 
II - Commit é o comando de submeter mudanças em um código-fonte. 
III - "Ramificação e mescla” é um método de divisão do projeto em diferentes linhas de desenvolvimento que podem ser trabalhadas paralelamente. 
IV - Status é o comando que adiciona os arquivos para serem enviados a um repositório remoto.
Estão corretas as seguintes afirmações: 
(a) II e III. 
(b) II e IV. 
(c) I e IV. 
(d) I e III. 


7. Assinale V para verdadeiro e F para falso: 
(V) Os comandos da ferramenta Git são relativamente simples: para adicionar, por exemplo, um arquivo novo ao repositório no Git, basta utilizar o comando commit depois de efetuar o comando add. 
(V) O Git, sistema de controle de versões que mantém um histórico completo de todas as alterações, permite a recuperação das versões do projeto na busca de informações sobre o estado dos arquivos em versões anteriores. 
(F) O Git é um software de controle de versionamento que opera como um repositório remoto. Outras aplicações como GitHub e GitLab são exemplos de softwares que implementam o Git para operarem localmente. 
(F) Os comandos git pull e git merge realizam a mesma tarefa. Podemos optar por qualquer um dos dois comandos, independente da situação.
